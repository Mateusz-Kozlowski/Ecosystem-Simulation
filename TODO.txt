The smaller number the greater priority (the sooner that thing should be implemented)

1:
implement/remove some God tools:
	change tracking icon from cursor to magnifier
	change rmv icon from big X to skull and change how that tools works
		so that it won't be able to rmv fruit and instead of rmv animals it will convert them into food
	change icon of replacing tool from that crossed arrows to some kind of hand that is going to grab sth
	rmv cloning tool bacause it break the law of energy conservation
	change the way how stop tool works - if an animal was stopped then the kinectic energy that had been lost
		is converted into food
	and maybe implement some new tools?...
add a gui widget that will allow to zoom in and zoom out the world
better nearest food searching algo (with complexity better than the current one (O(f*a)))
	or maybe even different inputs
rebuild the program structure at ecosystem and animals level (rewrite Ecosystem && Animal classes)
new "ecosystem creation state"
dt can be extremelly big if a window lost the focus

2:
DEBUG:
	debug showing brain while a simulation is paused (brain renders probably in the previous position)
	tunneling
	update brain after stopping (and probably also after replacing and maybe others (there are no others... probably))

STATES:
	shortcuts/keys state

GUI:
	one convention for all gui widgets, meybe even polimorphizm
	some GUI widgets positions are set relative to their centers and some are set relative to their 
		upper-left corners... =>
			=> fix that!
			=> maybe allow to choose both ways of setting positions?...
	
CONVENTION/NAMES/COMMENTS/CODE:
	convention of names in tools (->replace is also called move and it shouldn't have 2 names)(->track and select also)
		(rmv and delete? I used remove everywhere, but delete may be a better option)
	add consts to renders where it is possible (and also to other places)
	use sf::Vector2<T> instead of 2 floats
	smart pointers!

OTHERS:
	use EventsAccessors class wherever possible (including GUI classes)
	define states freezing
	nn viewer should never beyond the world
	textures (different) and hitbox component
	use real copy constructors (remember about the rule of three!)	
	sexual reproduction...

3:
Crappy Neural Nets! =>
	=> NEAT REAL TIME
	since using NEAT:
		brains preview also in side panel/menu and next to the animals
	=> <random> library? Check it out!
