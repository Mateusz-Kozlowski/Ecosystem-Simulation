The smaller number the greater priority (the sooner that thing will be implemented)

1 rmv debug button

1 select and track an animal
1 in side menu add switcher that allows to hide/show a brain
1 God hand <==> interventions:
	- killing animals
	- cloning animals (with or without mutations)
	- replacing animals
	- stopping animals
	- replacing food

1 better "eating algorithm" (with complexity better than the current one (O(f*a)))

1 loading "from main menu" (loading state will be neccessairly)

1 check if the string of that text in the left-top corner makes sense

1 add consts to renders where it is possible (and also to other places)

1 what with hp rendering? Does it have bool like nn preview? Do ecosystem control check that bool? I don't think so...

2 use sf::Vector2<T> instead of 2 floats
2 animal tracking
2 brains preview in side panel/menu and next to the animals
2 Shortcuts/about state
2 slowing down and speeding up a simulation
2 fix bug with preventing from going beyond the world (not change a sign of a vector but make it correct)
2 NEAT REAL TIME
2 new energy system
2 rebuild the program structure at ecosystem and animala level (rewrite Ecosystem && Animal class)
2 saving  "from main menu" (loading state will be neccessairly)
2 smart pointers!
2 cloning
2 add a better way of dealing with random numbers generator
2 set text function in Button class change string of sf::Text member, but doesn't "recenter" it, should this happen?

3 events to gui elements
3 define states freezing
3 keys editor
3? moving te panel so that it's never beyond the world
3 nn viewer as a side panel? Who knows...
3 ? random start positions
3 hiding neurons and weight if there is to many ... neurons in a layers
3 Species class
3 textures (different) and hitbox component
3? editor state
3 add open file explorer button! (if it will be needed)
3? async or sth if a user clicked load button without creating a new ecosystem in creator state?
3 sexual reproduction
3 Crappy Neural Nets!
3 <random> library? Check it out!