The smaller number the greater priority (the sooner that thing should be implemented)

1:
better nearest food searching algo (with complexity better than the current one (O(f*a)))

clean up Ecosystem and its members classes

side menu should be able to be opened not only using Esc key but also using a gui widget which doesn't even exist yet

dt can be extremelly big if a window lost the focus

shortcuts:
	speeding up and slowing down
	moving side panel
	God tools

saving zoom/world camera can be useful

"fake async loading" - before loading render some text with information about loading and after the process is complited
	stop rendering that text

avoid unnecessarily updates

avoid drawing things that are outside the window

rename neural net preview to sequential preview or sth like that

change all pointers to references (except where nullptr may be desired)

after loading ecosystem side menu panel should be updated (e.g. speed scaler)

crappy neural nets should have a method that allows to set inputs before calling predict/train methods

there is a BUG with ENERGY CONSERVATION law - ANIMALS can reach NEGATIVE hp

replace std::string with const char*

replace std::vector with std::array when u deal with fixed size memory

different inputs for brains?

don't allow to use God tools when a mouse cursor is over side menu

hp bars of tracked animals should have the same color as tracked animals bodies

there is a BUG in setting default positions - half of an animal can be in border

2:
DEBUG:
	debug showing brain while a simulation is paused (brain renders probably in the previous position)
	
	update brain after stopping (and probably also after replacing and maybe others (there are no others... probably))

STATES:
	saving State

	define states freezing

	shortcuts/keys State

GUI:
	one convention for all gui widgets, maybe even polimorphizm
	
	some GUI widgets positions are set relative to their centers and some are set relative to their
		left-top corners; add an ability to control their positions in these two ways

	NEAT-RT preview with ability to move neurons and save that changes
	
CONVENTION/NAMES/COMMENTS/CODE:
	convention of names in tools (->replace is also called move and it shouldn't have 2 names)(->track and select also)
		(rmv and delete? I used remove everywhere, but delete may be a better option)

	add consts to renders where it is possible (and also to other places)
	
	use sf::Vector2<T> instead of 2 floats

	overload some functions that contains sf::Vector2<T> using 2 primitives

	smart pointers should completly replace raw pointers

	in initKeybinds functions (are maybe in others that contains reading from files) 
		there are issues with if statements:
		replace sth like this:
			if(file.is_good())
			{
				reading from file...
			}
			else error
		with sth like this:
			if(!file.is_good()) error and exit(-1)
			
			reading from file...
	
	change speed_factor to simulation_speed_factor everywhere

OTHERS:
	implement info tool (probably it'll be able to give info not only about the entire ecosystem
		but also about particular animals if they are tracked at the moment or sth :) )
	
	use EventsAccessors class wherever possible (including GUI classes)
	
	nn preview should never be beyond the world
	
	textures (different) and hitbox component
	
	more/better ecosystems templates?	

	sexual reproduction...

Crappy Neural Nets!:
	NEAT REAL TIME
	
	<random> library? Check it out! Not C style of generating pseudorandom numbers
